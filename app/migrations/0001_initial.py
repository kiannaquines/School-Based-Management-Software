# Generated by Django 5.0.1 on 2024-02-21 06:40

import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_increase_one', models.FloatField(max_length=9)),
                ('enrollment_increase_two', models.FloatField(max_length=9)),
                ('enrollment_increase_three', models.FloatField(max_length=9)),
                ('percent_increase_two', models.FloatField(max_length=10)),
                ('percent_increase_three', models.FloatField(max_length=10)),
                ('average', models.FloatField(max_length=100)),
                ('final_result', models.FloatField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Enrollment Rate Score',
                'verbose_name_plural': 'Enrollment Rate Scores',
            },
        ),
        migrations.CreateModel(
            name='AssessmentScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principle', models.CharField(choices=[('LEADERSHIP', 'LEADERSHIP'), ('CURRICULUM & LEARNING', 'CURRICULUM & LEARNING'), ('ACCOUNTABILITY', 'ACCOUNTABILITY'), ('RESOURCE MANAGEMENT', 'RESOURCE MANAGEMENT')], default='', max_length=255)),
                ('weight', models.TextField(choices=[('30', '30%'), ('25', '25%'), ('15', '15%')], default='', max_length=255)),
                ('principle_score', models.FloatField()),
                ('cumulative_score', models.FloatField()),
                ('result', models.FloatField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Assessment Score',
                'verbose_name_plural': 'Assessment Scores',
            },
        ),
        migrations.CreateModel(
            name='Efficiency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drop_dropoutrate_one', models.FloatField(max_length=9)),
                ('drop_dropoutrate_two', models.FloatField(max_length=9)),
                ('drop_dropoutrate_three', models.FloatField(max_length=9)),
                ('drop_percent_increase_two', models.FloatField(max_length=10)),
                ('drop_percent_increase_three', models.FloatField(max_length=10)),
                ('drop_average', models.FloatField(max_length=10)),
                ('dropout_base_line_status', models.IntegerField(blank=True, null=True)),
                ('drop_percent_decrease', models.FloatField(max_length=10)),
                ('graduation_rate_one', models.FloatField(max_length=9)),
                ('graduation_rate_two', models.FloatField(max_length=9)),
                ('graduation_rate_three', models.FloatField(max_length=9)),
                ('graduation_rate_average', models.FloatField(max_length=9)),
                ('graduation_increase_per_two', models.FloatField(max_length=9)),
                ('graduation_increase_per_three', models.FloatField(max_length=9)),
                ('graduation_increase_average', models.FloatField(max_length=9)),
                ('graduation_base_line_status', models.IntegerField(blank=True, null=True)),
                ('promotion_rate_one', models.CharField(max_length=9)),
                ('promotion_rate_two', models.CharField(max_length=9)),
                ('promotion_rate_three', models.CharField(max_length=9)),
                ('promotion_rate_average', models.CharField(max_length=9)),
                ('promotion_increase_per_two', models.CharField(max_length=9)),
                ('promotion_increase_per_three', models.CharField(max_length=9)),
                ('promotion_increase_average', models.CharField(max_length=9)),
                ('promotion_base_line_status', models.IntegerField(blank=True, null=True)),
                ('final_result', models.FloatField()),
                ('sub_total', models.TextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Efficiency Score',
                'verbose_name_plural': 'Efficiency Scores',
            },
        ),
        migrations.CreateModel(
            name='ImprovementScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.TextField(choices=[('Performance Improvement', 'Performance Improvement'), ('SBM Assessment Score (DOD)', 'SBM Assessment Score (DOD)')], default='', max_length=255)),
                ('weight', models.TextField(choices=[('60', '60%'), ('40', '40%')], default='', max_length=255)),
                ('rating', models.FloatField()),
                ('result', models.FloatField()),
            ],
            options={
                'verbose_name': 'Improvement Score',
                'verbose_name_plural': 'Improvement Scores',
            },
        ),
        migrations.CreateModel(
            name='QualityRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_rate_one', models.CharField(max_length=9)),
                ('quality_rate_two', models.CharField(max_length=9)),
                ('quality_rate_three', models.CharField(max_length=9)),
                ('quality_rate_average', models.CharField(max_length=9)),
                ('quality_rate_two_percentage', models.CharField(max_length=9)),
                ('quality_rate_three_percentage', models.CharField(max_length=9)),
                ('quality_rate_average_percentage', models.CharField(max_length=9)),
                ('quality_final_result', models.FloatField()),
                ('quality_date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'NAT/Quality Score',
                'verbose_name_plural': 'NAT/Quality Scores',
            },
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_year', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'School Year',
                'verbose_name_plural': 'School Years',
            },
        ),
        migrations.CreateModel(
            name='AssessmentScoreInterpretation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('description', models.TextField(choices=[('GOOD', 'GOOD'), ('BETTER', 'BETTER'), ('BEST', 'BEST')], default='', max_length=50)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('accountability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accountability', to='app.assessmentscore')),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curriculum', to='app.assessmentscore')),
                ('leadership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leadership', to='app.assessmentscore')),
                ('management', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='management', to='app.assessmentscore')),
            ],
            options={
                'verbose_name': 'Assessment Score Interpretation',
                'verbose_name_plural': 'Assessment Score Interpretations',
            },
        ),
        migrations.CreateModel(
            name='FinalRatingInterpretation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('description', models.TextField(choices=[('DEVELOPING (LEVEL) I', 'DEVELOPING (LEVEL) I'), ('MATURING (LEVEL) II', 'MATURING (LEVEL) II'), ('ADVANCED (LEVEL) III', 'ADVANCED (LEVEL) III')], default='', max_length=20)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment', to='app.improvementscore')),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='app.improvementscore')),
            ],
            options={
                'verbose_name': 'Final Rating Interpretation',
                'verbose_name_plural': 'Final Rating Interpretations',
            },
        ),
        migrations.CreateModel(
            name='PerformanceImprovementInterpretation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('description', models.TextField(choices=[('GOOD', 'GOOD'), ('BETTER', 'BETTER'), ('BEST', 'BEST')], default='', max_length=50)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('access', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.accessrate')),
                ('efficiency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.efficiency')),
                ('quality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.qualityrate')),
            ],
            options={
                'verbose_name': 'Performance Improvement Interpretation',
                'verbose_name_plural': 'Performance Improvement Interpretations',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('access_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.accessrate')),
                ('accountability_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountability_id', to='app.assessmentscore')),
                ('curriculum_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='curriculum_id', to='app.assessmentscore')),
                ('efficiency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.efficiency')),
                ('leadership_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leadership_id', to='app.assessmentscore')),
                ('management_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='management_id', to='app.assessmentscore')),
                ('performance_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_sbm_id', to='app.improvementscore')),
                ('quality_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.qualityrate')),
                ('sbm_assessment_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sbm_assessment_id', to='app.improvementscore')),
            ],
            options={
                'verbose_name': 'Rating Score',
                'verbose_name_plural': 'Rating Scores',
            },
        ),
        migrations.AddField(
            model_name='qualityrate',
            name='quality_school_year_one',
            field=models.ForeignKey(default='', limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='quality_school_year_one', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='qualityrate',
            name='quality_school_year_three',
            field=models.ForeignKey(default='', limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='quality_school_year_three', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='qualityrate',
            name='quality_school_year_two',
            field=models.ForeignKey(default='', limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='quality_school_year_two', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='drop_school_year_one',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='drop_school_year_one', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='drop_school_year_three',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='drop_school_year_three', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='drop_school_year_two',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='drop_school_year_two', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='graduation_school_year_one',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='graduation_school_year_one', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='graduation_school_year_three',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='graduation_school_year_three', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='graduation_school_year_two',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='graduation_school_year_two', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='promotion_school_year_one',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='promotion_school_year_one', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='promotion_school_year_three',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='promotion_school_year_three', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='efficiency',
            name='promotion_school_year_two',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='promotion_school_year_two', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='accessrate',
            name='school_year_one',
            field=models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, related_name='school_year_one', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='accessrate',
            name='school_year_three',
            field=models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, related_name='school_year_three', to='app.schoolyear'),
        ),
        migrations.AddField(
            model_name='accessrate',
            name='school_year_two',
            field=models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, related_name='school_year_two', to='app.schoolyear'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=255)),
                ('task_description', django_ckeditor_5.fields.CKEditor5Field(max_length=1500)),
                ('is_active', models.BooleanField(default=True)),
                ('task_status', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('VERIFIED', 'VERIFIED')], default='PENDING', max_length=255)),
                ('task_due', models.DateField(null=True)),
                ('principle', models.CharField(choices=[('LEADERSHIP', 'LEADERSHIP'), ('CURRICULUM & LEARNING', 'CURRICULUM & LEARNING'), ('ACCOUNTABILITY', 'ACCOUNTABILITY'), ('RESOURCE MANAGEMENT', 'RESOURCE MANAGEMENT')], default='', max_length=255)),
                ('task_date_added', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='assgined_by', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(default='', limit_choices_to={'user_role': 'MEMBER'}, on_delete=django.db.models.deletion.CASCADE, related_name='assgined_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'get_latest_by': 'task_date_added',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='document/')),
                ('document_name', models.CharField(max_length=255, null=True)),
                ('document_type', models.CharField(max_length=100, null=True)),
                ('document_size', models.CharField(max_length=255, null=True)),
                ('download_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('current_sy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.schoolyear')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.task')),
            ],
            options={
                'verbose_name': 'Task Document',
                'verbose_name_plural': 'Task Documents',
            },
        ),
    ]
